{"version":3,"sources":["webpack://lecture/./hooks/useInput.ts","webpack://lecture/./layouts/Workspace/styles.tsx","webpack://lecture/./components/Modal/styles.tsx","webpack://lecture/./components/Modal/index.tsx","webpack://lecture/./components/CreateWorkspaceModal/index.tsx","webpack://lecture/./components/WorkspaceList/index.tsx","webpack://lecture/./components/ChatBox/styles.tsx","webpack://lecture/./components/ChatBox/index.tsx","webpack://lecture/./components/Chat/styles.tsx","webpack://lecture/./components/Chat/index.tsx","webpack://lecture/./components/ChatList/styles.tsx","webpack://lecture/./components/ChatList/index.tsx","webpack://lecture/./components/InviteChannelModal/index.tsx","webpack://lecture/./hooks/useSocket.ts","webpack://lecture/./pages/Channel/styles.tsx","webpack://lecture/./utils/makeSection.ts","webpack://lecture/./pages/Channel/index.tsx","webpack://lecture/./components/Menu/styles.tsx","webpack://lecture/./components/Menu/index.tsx","webpack://lecture/./components/Header/styles.tsx","webpack://lecture/./components/Header/index.tsx","webpack://lecture/./components/DMList/styles.tsx","webpack://lecture/./components/ChannelList/index.tsx","webpack://lecture/./components/CreateChannelModal/index.tsx","webpack://lecture/./components/DMList/index.tsx","webpack://lecture/./components/InviteWorkspaceModal/index.tsx","webpack://lecture/./components/WorkspaceChannels/index.tsx","webpack://lecture/./pages/DirectMessage/styles.tsx","webpack://lecture/./pages/DirectMessage/index.tsx","webpack://lecture/./layouts/Workspace/index.tsx","webpack://lecture/./pages/SignUp/styles.ts","webpack://lecture/./utils/fetcher.ts"],"names":["initialData","value","setValue","useState","useCallback","e","target","WorkspaceWrapper","styled","Workspaces","Channels","WorkspaceName","MenuScroll","WorkspaceModal","Chats","AddButton","WorkspaceButton","CreateModal","CloseModalButton","show","children","onCloseModal","stopPropagation","onClick","onCreateWorkspace","newWorkspace","onChangeNewWorkspace","setNewWorkpsace","useInput","newUrl","onChangeNewUrl","setNewUrl","onSubmit","async","preventDefault","trim","id","onChange","type","list","revalidate","history","useHistory","setWorkspace","useWorkspace","showCreateWorkspaceModal","setShowCreateWorkspaceModal","onClickCreateWorkspace","axios","workspace","url","withCredentials","error","console","dir","toast","response","data","position","useEffect","location","pathname","split","length","find","wp","map","key","to","name","slice","toUpperCase","ChatArea","Form","MentionsTextarea","MentionsInput","Toolbox","SendButton","EachMention","focus","chat","onSubmitForm","onChangeChat","placeholder","useParams","userData","mutate","useSWR","fetcher","dedupingInterval","memberData","textareaRef","useRef","current","autosize","onKeydownChat","shiftKey","renderSuggestion","suggestion","search","highlightedDisplay","index","src","gravatar","email","s","d","alt","nickname","onKeyPress","inputRef","allowSuggestionsAboveCursor","appendSpaceOnAdd","trigger","v","display","className","data-qa","aria-label","data-sk","disabled","aria-hidden","ChatWrapper","Chat","user","Sender","User","result","useMemo","content","startsWith","style","maxHeight","regexifyString","input","pattern","decorator","match","arr","padding","dayjs","createdAt","format","memo","ChatZone","Section","StickyHeader","forwardRef","chatSections","setSize","isReachingEnd","scrollRef","onScroll","values","scrollTop","log","prevSize","then","getScrollHeight","scrollHeight","autoHide","ref","onScrollFrame","Object","entries","date","chats","setShowInviteChannelModal","channel","newMember","onChangeNewMember","setNewMember","revalidateMembers","onInviteMember","event","sockets","disconnect","io","transports","undefined","Container","Header","DragOver","chatList","sections","forEach","monthDate","Array","isArray","push","myData","setChat","channelData","chatData","mutateChat","useSWRInfinite","channelMembersData","socket","useSocket","scrollbarRef","showInviteChannelModal","dragOver","setDragOver","prevChatData","unshift","UserId","ChannelId","Channel","Date","scrollToBottom","onMessage","getClientHeight","getScrollTop","getValues","setTimeout","on","off","onClickInviteChannel","onDrop","formData","FormData","files","i","file","getAsFile","append","dataTransfer","items","kind","onDragOver","makeSection","flat","reverse","CreateMenu","Menu","closeButton","defaultProps","RightMenu","ProfileImg","ProfileModal","LogOutButton","onLogout","showUserMenu","setShowUserMenu","onCloseUserProfile","onClickUserProfile","prev","right","top","CollapseButton","collapse","channelCollapse","setChannelCollapse","toggleChannelCollapse","emit","channels","activeClassName","setShowCreateChannelModal","newChannel","onChangeNewChannel","setNewChannel","revalidateChannel","onCreateChannel","onlineList","setOnlineList","member","isOnline","includes","data-qa-presence-self","data-qa-presence-active","data-qa-presence-dnd","setShowInviteWorkspaceModal","revalidateMember","showWorkspaceModal","setShowWorkspaceModal","showCreateChannelModal","showInviteWorkspaceModal","toggleWorkspaceModal","onClickInviteWorkspace","onClickAddChannel","left","SenderId","ReceiverId","Receiver","Number","onDragLeave","workspacesData","workspaceRevalidate","path","component","DirectMessage","Label","Input","Button","Error","Success","LinkContainer"],"mappings":"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","file":"58.js","sourcesContent":["import { Dispatch, SetStateAction, useCallback, useState } from 'react';\n\ntype ReturnTypes<T> = [T, (e: any) => void, Dispatch<SetStateAction<T>>];\n\nconst useInput = <T = any>(initialData: T): ReturnTypes<T> => {\n  const [value, setValue] = useState(initialData);\n  const handler = useCallback((e: any) => {\n    setValue(e.target.value);\n  }, []);\n\n  return [value, handler, setValue];\n};\n\nexport default useInput;\n","import styled from '@emotion/styled';\n\nexport const WorkspaceWrapper = styled.div`\n  display: flex;\n  flex: 1;\n`;\n\nexport const Workspaces = styled.div`\n  width: 65px;\n  display: inline-flex;\n  flex-direction: column;\n  align-items: center;\n  background: #3f0e40;\n  border-top: 1px solid rgb(82, 38, 83);\n  border-right: 1px solid rgb(82, 38, 83);\n  vertical-align: top;\n  text-align: center;\n  padding: 15px 0 0;\n`;\n\nexport const Channels = styled.nav`\n  width: 260px;\n  display: inline-flex;\n  flex-direction: column;\n  background: #3f0e40;\n  color: rgb(188, 171, 188);\n  vertical-align: top;\n  & a {\n    padding-left: 36px;\n    color: inherit;\n    text-decoration: none;\n    height: 28px;\n    line-height: 28px;\n    display: flex;\n    align-items: center;\n    &.selected {\n      color: white;\n    }\n  }\n  & .bold {\n    color: white;\n    font-weight: bold;\n  }\n  & .count {\n    margin-left: auto;\n    background: #cd2553;\n    border-radius: 16px;\n    display: inline-block;\n    font-size: 12px;\n    font-weight: 700;\n    height: 18px;\n    line-height: 18px;\n    padding: 0 9px;\n    color: white;\n    margin-right: 16px;\n  }\n  & h2 {\n    height: 36px;\n    line-height: 36px;\n    margin: 0;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    white-space: nowrap;\n    font-size: 15px;\n  }\n`;\n\nexport const WorkspaceName = styled.button`\n  height: 64px;\n  line-height: 64px;\n  border: none;\n  width: 100%;\n  text-align: left;\n  border-top: 1px solid rgb(82, 38, 83);\n  border-bottom: 1px solid rgb(82, 38, 83);\n  font-weight: 900;\n  font-size: 23px;\n  background: transparent;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n  padding: 0;\n  padding-left: 16px;\n  margin: 0;\n  color: white;\n  cursor: pointer;\n`;\n\nexport const MenuScroll = styled.div`\n  height: calc(100vh - 102px);\n  overflow-y: auto;\n`;\n\nexport const WorkspaceModal = styled.div`\n  padding: 10px 0 0;\n  & h2 {\n    padding-left: 20px;\n  }\n  & > button {\n    width: 100%;\n    height: 28px;\n    padding: 4px;\n    border: none;\n    background: transparent;\n    border-top: 1px solid rgb(28, 29, 28);\n    cursor: pointer;\n    &:last-of-type {\n      border-bottom: 1px solid rgb(28, 29, 28);\n    }\n  }\n`;\n\nexport const Chats = styled.div`\n  flex: 1;\n`;\n\nexport const AddButton = styled.button`\n  color: white;\n  font-size: 24px;\n  display: inline-block;\n  width: 40px;\n  height: 40px;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n`;\n\nexport const WorkspaceButton = styled.button`\n  display: inline-block;\n  width: 40px;\n  height: 40px;\n  border-radius: 10px;\n  background: white;\n  border: 3px solid #3f0e40;\n  margin-bottom: 15px;\n  font-size: 18px;\n  font-weight: 700;\n  color: black;\n  cursor: pointer;\n`;\n","import styled from '@emotion/styled';\n\nexport const CreateModal = styled.div`\n  position: fixed;\n  text-align: center;\n  left: 0;\n  bottom: 0;\n  top: 0;\n  right: 0;\n  z-index: 1022;\n  & > div {\n    margin-top: 200px;\n    display: inline-block;\n    width: 440px;\n    background: white;\n    --saf-0: rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);\n    box-shadow: 0 0 0 1px var(--saf-0), 0 4px 12px 0 rgba(0, 0, 0, 0.12);\n    background-color: rgba(var(--sk_foreground_min_solid, 248, 248, 248), 1);\n    border-radius: 6px;\n    user-select: none;\n    max-width: 440px;\n    padding: 30px 40px 0;\n    z-index: 1012;\n    position: relative;\n  }\n`;\n\nexport const CloseModalButton = styled.button`\n  position: absolute;\n  right: 10px;\n  top: 6px;\n  background: transparent;\n  border: none;\n  font-size: 30px;\n  cursor: pointer;\n`;\n","import { CloseModalButton, CreateModal } from '@components/Modal/styles';\nimport React, { FC, useCallback } from 'react';\n\ninterface Props {\n  show: boolean;\n  onCloseModal: () => void;\n}\nconst Modal: FC<Props> = ({ show, children, onCloseModal }) => {\n  const stopPropagation = useCallback((e) => {\n    e.stopPropagation();\n  }, []);\n\n  if (!show) {\n    return null;\n  }\n  return (\n    <CreateModal onClick={onCloseModal}>\n      <div onClick={stopPropagation}>\n        <CloseModalButton onClick={onCloseModal}>&times;</CloseModalButton>\n        {children}\n      </div>\n    </CreateModal>\n  );\n};\n\nexport default Modal;\n","import Modal from '@components/Modal';\nimport React, { FC, useCallback } from 'react';\nimport { Button, Input, Label } from '@pages/SignUp/styles';\nimport useInput from '@hooks/useInput';\nimport axios from 'axios';\n\ninterface Props {\n  show: boolean;\n  onCloseModal: () => void;\n  onCreateWorkspace: (newWorkspace: string, newUrl: string) => Promise<void>;\n}\n\nconst CreateWorkspaceModal: FC<Props> = ({ show, onCloseModal, onCreateWorkspace }) => {\n  const [newWorkspace, onChangeNewWorkspace, setNewWorkpsace] = useInput('');\n  const [newUrl, onChangeNewUrl, setNewUrl] = useInput('');\n\n  const onSubmit = useCallback(\n    async (e) => {\n      e.preventDefault();\n      if (!newWorkspace || !newWorkspace.trim()) return;\n      if (!newUrl || !newUrl.trim()) return;\n\n      await onCreateWorkspace(newWorkspace, newUrl);\n\n      setNewWorkpsace('');\n      setNewUrl('');\n    },\n    [newWorkspace, newUrl],\n  );\n\n  return (\n    <Modal show={show} onCloseModal={onCloseModal}>\n      <form onSubmit={onSubmit}>\n        <Label id=\"workspace-label\">\n          <span>워크스페이스 이름</span>\n          <Input id=\"workspace\" value={newWorkspace} onChange={onChangeNewWorkspace} />\n        </Label>\n        <Label id=\"workspace-url-label\">\n          <span>워크스페이스 url</span>\n          <Input id=\"workspace\" value={newUrl} onChange={onChangeNewUrl} />\n        </Label>\n        <Button type=\"submit\">생성하기</Button>\n      </form>\n    </Modal>\n  );\n};\n\nexport default CreateWorkspaceModal;\n","import CreateWorkspaceModal from '@components/CreateWorkspaceModal';\nimport { useWorkspace } from '@contexts/WorkspaceContext';\nimport { AddButton, WorkspaceButton, Workspaces } from '@layouts/Workspace/styles';\nimport { IWorkspace } from '@typings/api';\nimport axios from 'axios';\nimport React, { useCallback, useEffect, useState, VFC } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\ninterface Props {\n  list: IWorkspace[];\n  revalidate: () => Promise<boolean>;\n}\n\nconst WorkspaceList: VFC<Props> = ({ list, revalidate }) => {\n  const history = useHistory();\n  const { setWorkspace } = useWorkspace();\n  const [showCreateWorkspaceModal, setShowCreateWorkspaceModal] = useState(false);\n\n  const onClickCreateWorkspace = useCallback(() => {\n    setShowCreateWorkspaceModal(true);\n  }, []);\n\n  const onCloseModal = useCallback(() => {\n    setShowCreateWorkspaceModal(false);\n  }, []);\n\n  const onCreateWorkspace = useCallback(async (newWorkspace: string, newUrl: string) => {\n    try {\n      await axios.post(\n        '/api/workspaces',\n        {\n          workspace: newWorkspace,\n          url: newUrl,\n        },\n        {\n          withCredentials: true,\n        },\n      );\n      revalidate();\n      setShowCreateWorkspaceModal(false);\n    } catch (error) {\n      console.dir(error);\n      toast.error(error.response?.data, { position: 'bottom-center' });\n    }\n  }, []);\n\n  useEffect(() => {\n    if (history.location.pathname.split('/').length > 2) {\n      const workspace = list.find((wp) => wp.url === history.location.pathname.split('/')[2]);\n      if (workspace) {\n        setWorkspace(workspace);\n      }\n    }\n  }, [list, history.location]);\n\n  return (\n    <>\n      <Workspaces>\n        {list &&\n          list.map((workspace) => {\n            return (\n              <Link\n                key={workspace.id}\n                to={`/workspace/${workspace.url}/channel/일반`}\n                onClick={() => setWorkspace(workspace)}\n              >\n                <WorkspaceButton>{workspace.name.slice(0, 1).toUpperCase()}</WorkspaceButton>\n              </Link>\n            );\n          })}\n        <AddButton onClick={onClickCreateWorkspace}>+</AddButton>\n      </Workspaces>\n      <CreateWorkspaceModal\n        show={showCreateWorkspaceModal}\n        onCloseModal={onCloseModal}\n        onCreateWorkspace={onCreateWorkspace}\n      />\n    </>\n  );\n};\n\nexport default WorkspaceList;\n","import styled from '@emotion/styled';\nimport { MentionsInput } from 'react-mentions';\n\nexport const ChatArea = styled.div`\n  display: flex;\n  width: 100%;\n  padding: 20px;\n  padding-top: 0;\n`;\n\nexport const Form = styled.form`\n  color: rgb(29, 28, 29);\n  font-size: 15px;\n  width: 100%;\n  border-radius: 4px;\n  border: 1px solid rgb(29, 28, 29);\n`;\n\nexport const MentionsTextarea = styled(MentionsInput)`\n  font-family: Slack-Lato, appleLogo, sans-serif;\n  font-size: 15px;\n  padding: 8px 9px;\n  width: 100%;\n  & strong {\n    background: skyblue;\n  }\n  & textarea {\n    height: 44px;\n    padding: 9px 10px !important;\n    outline: none !important;\n    border-radius: 4px !important;\n    resize: none !important;\n    line-height: 22px;\n    border: none;\n  }\n  & ul {\n    border: 1px solid lightgray;\n    max-height: 200px;\n    overflow-y: auto;\n    padding: 9px 10px;\n    background: white;\n    border-radius: 4px;\n    width: 150px;\n  }\n`;\n\nexport const Toolbox = styled.div`\n  position: relative;\n  background: rgb(248, 248, 248);\n  height: 41px;\n  display: flex;\n  border-top: 1px solid rgb(221, 221, 221);\n  align-items: center;\n  border-bottom-left-radius: 4px;\n  border-bottom-right-radius: 4px;\n`;\n\nexport const SendButton = styled.button`\n  position: absolute;\n  right: 5px;\n  top: 5px;\n`;\n\nexport const EachMention = styled.button<{ focus: boolean }>`\n  padding: 4px 20px;\n  background: transparent;\n  border: none;\n  display: flex;\n  align-items: center;\n  color: rgb(28, 29, 28);\n  width: 100%;\n  & img {\n    margin-right: 5px;\n  }\n  ${({ focus }) =>\n    focus &&\n    `\n    background: #1264a3;\n    color: white;\n  `};\n`;\n","import { ChatArea, EachMention, Form, MentionsTextarea, SendButton, Toolbox } from '@components/ChatBox/styles';\nimport { IUser } from '@typings/api.d';\nimport fetcher from '@utils/fetcher';\nimport React, { useCallback, useEffect, useRef, VFC } from 'react';\nimport autosize from 'autosize';\nimport { Mention, SuggestionDataItem } from 'react-mentions';\nimport { useParams } from 'react-router';\nimport useSWR from 'swr';\nimport gravatar from 'gravatar';\n\ninterface Props {\n  chat: string;\n  onSubmitForm: (e: any) => void;\n  onChangeChat: (e: any) => void;\n  placeholder?: string;\n}\nconst ChatBox: VFC<Props> = ({ chat, onSubmitForm, onChangeChat, placeholder }) => {\n  const { workspace } = useParams<{ workspace: string }>();\n  const { data: userData, error, revalidate, mutate } = useSWR<IUser | false>('/api/users', fetcher, {\n    dedupingInterval: 2000, // 2초\n  });\n  const { data: memberData } = useSWR<IUser[]>(\n    userData && workspace !== 'slack' ? `/api/workspaces/${workspace}/members` : null,\n    fetcher,\n  );\n\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\n  useEffect(() => {\n    if (textareaRef.current) {\n      autosize(textareaRef.current);\n    }\n  }, []);\n\n  const onKeydownChat = useCallback(\n    (e) => {\n      if (e.key === 'Enter') {\n        if (!e.shiftKey) {\n          e.preventDefault();\n          onSubmitForm(e);\n        }\n      }\n    },\n    [onSubmitForm],\n  );\n\n  const renderSuggestion = useCallback(\n    (\n      suggestion: SuggestionDataItem,\n      search: string,\n      highlightedDisplay: React.ReactNode,\n      index: number,\n      focus: boolean,\n    ): React.ReactNode => {\n      if (!memberData) return;\n      return (\n        <EachMention focus={focus}>\n          <img\n            src={gravatar.url(memberData[index].email, { s: '20px', d: 'retro' })}\n            alt={memberData[index].nickname}\n          />\n          <span>{highlightedDisplay}</span>\n        </EachMention>\n      );\n    },\n    [memberData],\n  );\n\n  return (\n    <ChatArea>\n      <Form onSubmit={onSubmitForm}>\n        <MentionsTextarea\n          id=\"editor-chat\"\n          value={chat}\n          onChange={onChangeChat}\n          onKeyPress={onKeydownChat}\n          placeholder={placeholder}\n          inputRef={textareaRef}\n          allowSuggestionsAboveCursor\n        >\n          <Mention\n            appendSpaceOnAdd\n            trigger=\"@\"\n            data={memberData?.map((v) => ({ id: v.id, display: v.nickname })) || []}\n            renderSuggestion={renderSuggestion}\n          />\n        </MentionsTextarea>\n        <Toolbox>\n          <SendButton\n            className={\n              'c-button-unstyled c-icon_button c-icon_button--light c-icon_button--size_medium c-texty_input__button c-texty_input__button--send' +\n              (chat?.trim() ? '' : ' c-texty_input__button--disabled')\n            }\n            data-qa=\"texty_send_button\"\n            aria-label=\"Send message\"\n            data-sk=\"tooltip_parent\"\n            type=\"submit\"\n            disabled={!chat?.trim()}\n          >\n            <i className=\"c-icon c-icon--paperplane-filled\" aria-hidden=\"true\" />\n          </SendButton>\n        </Toolbox>\n      </Form>\n    </ChatArea>\n  );\n};\n\nexport default ChatBox;\n","import styled from '@emotion/styled';\n\nexport const ChatWrapper = styled.div`\n  display: flex;\n  padding: 8px 20px;\n  &:hover {\n    background: #eee;\n  }\n  & .chat-img {\n    display: flex;\n    width: 36px;\n    margin-right: 8px;\n    & img {\n      width: 36px;\n      height: 36px;\n    }\n  }\n`;\n","import { ChatWrapper } from '@components/Chat/styles';\nimport { IDM, IChat } from '@typings/api.d';\nimport React, { VFC, memo, useMemo } from 'react';\nimport gravatar from 'gravatar';\nimport dayjs from 'dayjs';\nimport regexifyString from 'regexify-string';\nimport { Link, useParams } from 'react-router-dom';\n\ninterface Props {\n  data: IDM | IChat;\n}\n\nconst Chat: VFC<Props> = ({ data }) => {\n  const { workspace } = useParams<{ workspace: string; channel: string }>();\n  const user = 'Sender' in data ? data.Sender : data.User;\n\n  const result = useMemo(\n    () =>\n      // uploads\\\\서버주소\n      data.content.startsWith('uploads/') ? (\n        <img src={`${API_URL}/${data.content}`} style={{ maxHeight: 200 }} />\n      ) : (\n        regexifyString({\n          input: data.content,\n          pattern: /@\\[(.+?)]\\((\\d+?)\\)|\\n/g,\n          decorator(match, index) {\n            const arr: string[] | null = match.match(/@\\[(.+?)]\\((\\d+?)\\)/)!;\n            if (arr) {\n              return (\n                <Link key={match + index} to={`/workspace/${workspace}/dm/${arr[2]}`}>\n                  @{arr[1]}\n                </Link>\n              );\n            }\n            return <br key={index} />;\n          },\n        })\n      ),\n    [workspace, data.content],\n  );\n\n  return (\n    <ChatWrapper>\n      <div className=\"chat-img\">\n        <img src={gravatar.url(user.email, { s: '36px', d: 'retro' })} alt={user.nickname} />\n      </div>\n      <div className=\"chat-text\">\n        <div className=\"chat-user\">\n          <b>{user.nickname}</b>\n          <span style={{ padding: '0px 4px' }}>{dayjs(data.createdAt).format('h:mm A')}</span>\n        </div>\n        <p>{result}</p>\n      </div>\n    </ChatWrapper>\n  );\n};\n\nexport default memo(Chat);\n","import styled from '@emotion/styled';\n\nexport const ChatZone = styled.div`\n  width: 100%;\n  display: flex;\n  flex: 1;\n`;\n\nexport const Section = styled.section`\n  margin-top: 20px;\n  border-top: 1px solid #eee;\n`;\n\nexport const StickyHeader = styled.div`\n  display: flex;\n  justify-content: center;\n  flex: 1;\n  width: 100%;\n  position: sticky;\n  top: 14px;\n  & button {\n    font-weight: bold;\n    font-size: 13px;\n    height: 28px;\n    line-height: 27px;\n    padding: 0 16px;\n    z-index: 2;\n    --saf-0: rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);\n    box-shadow: 0 0 0 1px var(--saf-0), 0 1px 3px 0 rgba(0, 0, 0, 0.08);\n    border-radius: 24px;\n    position: relative;\n    top: -13px;\n    background: white;\n    border: none;\n    outline: none;\n  }\n`;\n","import React, { useCallback, forwardRef, MutableRefObject } from 'react';\nimport { IDM, IChat } from '@typings/api.d';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport Chat from '@components/Chat';\nimport { ChatZone, Section, StickyHeader } from '@components/ChatList/styles';\n\ninterface Props {\n  chatSections: { [key: string]: (IDM | IChat)[] };\n  setSize: (f: (size: number) => number) => Promise<(IDM | IChat)[][] | undefined>;\n  isReachingEnd: boolean;\n}\nconst ChatList = forwardRef<Scrollbars, Props>(({ chatSections, setSize, isReachingEnd }, scrollRef) => {\n  const onScroll = useCallback(\n    (values) => {\n      if (values.scrollTop === 0 && !isReachingEnd) {\n        console.log('가장 위');\n        setSize((prevSize) => prevSize + 1).then(() => {\n          // 스크롤 위치 유지\n          const current = (scrollRef as MutableRefObject<Scrollbars>)?.current;\n          if (current) {\n            current.scrollTop(current.getScrollHeight() - values.scrollHeight);\n          }\n        });\n      }\n    },\n    [scrollRef, isReachingEnd, setSize],\n  );\n\n  return (\n    <ChatZone>\n      <Scrollbars autoHide ref={scrollRef} onScrollFrame={onScroll}>\n        {Object.entries(chatSections).map(([date, chats]) => {\n          return (\n            <Section className={`section-${date}`} key={date}>\n              <StickyHeader>\n                <button>{date}</button>\n              </StickyHeader>\n              {chats.map((chat) => (\n                <Chat key={chat.id} data={chat} />\n              ))}\n            </Section>\n          );\n        })}\n      </Scrollbars>\n    </ChatZone>\n  );\n});\n\nexport default ChatList;\n","import Modal from '@components/Modal';\nimport useInput from '@hooks/useInput';\nimport { Button, Input, Label } from '@pages/SignUp/styles';\nimport { IUser } from '@typings/api.d';\nimport fetcher from '@utils/fetcher';\nimport axios from 'axios';\nimport React, { FC, useCallback } from 'react';\nimport { useParams } from 'react-router';\nimport { toast } from 'react-toastify';\nimport useSWR from 'swr';\n\ninterface Props {\n  show: boolean;\n  onCloseModal: () => void;\n  setShowInviteChannelModal: (flag: boolean) => void;\n}\nconst InviteChannelModal: FC<Props> = ({ show, onCloseModal, setShowInviteChannelModal }) => {\n  const { workspace, channel } = useParams<{ workspace: string; channel: string }>();\n  const [newMember, onChangeNewMember, setNewMember] = useInput('');\n  const { data: userData } = useSWR<IUser>('/api/users', fetcher);\n  const { revalidate: revalidateMembers } = useSWR<IUser[]>(\n    userData && workspace !== 'slack' && channel ? `/api/workspaces/${workspace}/channels/${channel}/members` : null,\n    fetcher,\n  );\n\n  const onInviteMember = useCallback(\n    async (event) => {\n      event.preventDefault();\n      if (!newMember || !newMember.trim()) {\n        return;\n      }\n      try {\n        await axios.post(`/api/workspaces/${workspace}/channels/${channel}/members`, {\n          email: newMember,\n        });\n        revalidateMembers();\n        setShowInviteChannelModal(false);\n        setNewMember('');\n      } catch (error) {\n        console.dir(error);\n        toast.error(error.response?.data, { position: 'bottom-center' });\n      }\n    },\n    [newMember],\n  );\n\n  return (\n    <Modal show={show} onCloseModal={onCloseModal}>\n      <form onSubmit={onInviteMember}>\n        <Label id=\"member-label\">\n          <span>채널 멤버 초대</span>\n          <Input id=\"member\" value={newMember} onChange={onChangeNewMember} />\n        </Label>\n        <Button type=\"submit\">초대하기</Button>\n      </form>\n    </Modal>\n  );\n};\n\nexport default InviteChannelModal;\n","import { useCallback } from 'react';\nimport { io, Socket } from 'socket.io-client';\n\nconst backUrl = 'http://localhost:3095';\n\ntype SocketMap = {\n  [key: string]: Socket;\n};\n\nconst sockets: SocketMap = {};\n\nconst useSocket = (workspace?: string): [Socket | undefined, () => void] => {\n  const disconnect = useCallback(() => {\n    if (workspace) {\n      sockets[workspace].disconnect();\n      delete sockets[workspace];\n    }\n  }, []);\n\n  if (!workspace) {\n    return [undefined, disconnect];\n  }\n\n  if (!sockets[workspace]) {\n    sockets[workspace] = io(`${backUrl}/ws-${workspace}`, {\n      transports: ['websocket'],\n    });\n  }\n\n  return [sockets[workspace], disconnect];\n};\n\nexport default useSocket;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  height: calc(100vh - 38px);\n  flex-flow: column;\n  position: relative;\n`;\n\nexport const Header = styled.header`\n  height: 64px;\n  display: flex;\n  width: 100%;\n  --saf-0: rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);\n  box-shadow: 0 1px 0 var(--saf-0);\n  padding: 20px 16px 20px 20px;\n  font-weight: bold;\n  align-items: center;\n\n  & .header-right {\n    display: flex;\n    flex: 1;\n    justify-content: flex-end;\n    align-items: center;\n  }\n`;\n\nexport const DragOver = styled.div`\n  position: absolute;\n  top: 64px;\n  left: 0;\n  width: 100%;\n  height: calc(100% - 64px);\n  background: white;\n  opacity: 0.7;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 40px;\n`;\n","import { IDM, IChat } from '@typings/api.d';\nimport dayjs from 'dayjs';\n\n/**\n * key is date\n */\ntype Section = {\n  [key: string]: (IDM | IChat)[];\n};\n\nconst makeSection = (chatList: (IDM | IChat)[]) => {\n  const sections: Section = {};\n  chatList.forEach((chat) => {\n    const monthDate = dayjs(chat.createdAt).format('YYYY-MM-DD');\n    if (Array.isArray(sections[monthDate])) {\n      sections[monthDate].push(chat);\n    } else {\n      sections[monthDate] = [chat];\n    }\n  });\n  return sections;\n};\n\nexport default makeSection;\n","import ChatBox from '@components/ChatBox';\nimport ChatList from '@components/ChatList';\nimport InviteChannelModal from '@components/InviteChannelModal';\nimport useInput from '@hooks/useInput';\nimport useSocket from '@hooks/useSocket';\nimport { Container, Header, DragOver } from '@pages/Channel/styles';\nimport { IChannel, IChat, IUser } from '@typings/api.d';\nimport fetcher from '@utils/fetcher';\nimport makeSection from '@utils/makeSection';\nimport axios from 'axios';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport Scrollbars from 'react-custom-scrollbars';\nimport { useParams } from 'react-router';\nimport useSWR, { useSWRInfinite } from 'swr';\n\nconst Channel = () => {\n  const { workspace, channel } = useParams<{ workspace: string; channel: string }>();\n  const { data: myData } = useSWR('/api/users', fetcher);\n  const [chat, onChangeChat, setChat] = useInput('');\n  const { data: channelData } = useSWR<IChannel>(\n    () => (workspace !== 'slack' ? `/api/workspaces/${workspace}/channels/${channel}` : null),\n    fetcher,\n  );\n  const { data: chatData, mutate: mutateChat, revalidate, setSize } = useSWRInfinite<IChat[]>(\n    (index) =>\n      workspace !== 'slack'\n        ? `/api/workspaces/${workspace}/channels/${channel}/chats?perPage=20&page=${index + 1}`\n        : null,\n    fetcher,\n  );\n\n  const { data: channelMembersData } = useSWR<IUser[]>(\n    () => (myData && workspace !== 'slack' ? `/api/workspaces/${workspace}/channels/${channel}/members` : null),\n    fetcher,\n  );\n\n  const [socket] = useSocket(workspace);\n\n  const isEmpty = chatData?.[0]?.length === 0;\n  const isReachingEnd = isEmpty || (chatData && chatData[chatData.length - 1]?.length < 20) || false;\n  const scrollbarRef = useRef<Scrollbars>(null);\n  const [showInviteChannelModal, setShowInviteChannelModal] = useState(false);\n  const [dragOver, setDragOver] = useState(false);\n\n  const onSubmitForm = useCallback(\n    async (event) => {\n      event.preventDefault();\n      if (chat?.trim() && chatData && channelData) {\n        try {\n          await mutateChat((prevChatData) => {\n            prevChatData?.[0].unshift({\n              id: (chatData[0][0]?.id || 0) + 1,\n              content: chat,\n              UserId: myData.id,\n              User: myData,\n              ChannelId: channelData.id,\n              Channel: channelData,\n              createdAt: new Date(),\n            });\n            return prevChatData;\n          }, false);\n\n          scrollbarRef.current?.scrollToBottom();\n          setChat('');\n\n          await axios.post(`/api/workspaces/${workspace}/channels/${channel}/chats`, {\n            content: chat,\n          });\n\n          revalidate();\n        } catch (error) {\n          console.error(error);\n        }\n      }\n    },\n    [chat, chatData, myData, channelData, workspace, channel],\n  );\n\n  const onMessage = useCallback(\n    async (data: IChat) => {\n      console.log(data);\n      if (data.Channel.name === channel && (data.content.startsWith('uploads') || data.UserId !== myData?.id)) {\n        await mutateChat((chatData) => {\n          console.log(chatData);\n          chatData?.[0].unshift(data);\n          return chatData;\n        }, false);\n        if (scrollbarRef.current) {\n          if (\n            scrollbarRef.current.getScrollHeight() <\n            scrollbarRef.current.getClientHeight() + scrollbarRef.current.getScrollTop() + 150\n          ) {\n            console.log('scrollToBottom!', scrollbarRef.current?.getValues());\n            setTimeout(() => {\n              scrollbarRef.current?.scrollToBottom();\n            }, 50);\n          }\n        }\n      }\n    },\n    [channel, myData],\n  );\n\n  useEffect(() => {\n    socket?.on('message', onMessage);\n    return () => {\n      socket?.off('message', onMessage);\n    };\n  }, [socket, onMessage]);\n\n  // scroll to bottom if loaded\n  useEffect(() => {\n    console.log(chatData?.length);\n    if (chatData?.length === 1) {\n      setTimeout(() => {\n        scrollbarRef.current?.scrollToBottom();\n      }, 500);\n    }\n  }, [chatData]);\n\n  const onClickInviteChannel = useCallback(() => {\n    setShowInviteChannelModal(true);\n  }, []);\n\n  const onCloseModal = useCallback(() => {\n    setShowInviteChannelModal(false);\n  }, []);\n\n  const onChangeFile = useCallback((e) => {\n    const formData = new FormData();\n    if (e.target.files) {\n      // Use DataTransferItemList interface to access the file(s)\n      for (let i = 0; i < e.target.files.length; i++) {\n        const file = e.target.files[i].getAsFile();\n        console.log('... file[' + i + '].name = ' + file.name);\n        formData.append('image', file);\n      }\n    }\n    axios.post(`/api/workspaces/${workspace}/channels/${channel}/images`, formData).then(() => {});\n  }, []);\n\n  const onDrop = useCallback(\n    (e) => {\n      e.preventDefault();\n      console.log(e);\n      const formData = new FormData();\n      if (e.dataTransfer.items) {\n        // Use DataTransferItemList interface to access the file(s)\n        for (let i = 0; i < e.dataTransfer.items.length; i++) {\n          // If dropped items aren't files, reject them\n          if (e.dataTransfer.items[i].kind === 'file') {\n            const file = e.dataTransfer.items[i].getAsFile();\n            console.log('... file[' + i + '].name = ' + file.name);\n            formData.append('image', file);\n          }\n        }\n      } else {\n        // Use DataTransfer interface to access the file(s)\n        for (let i = 0; i < e.dataTransfer.files.length; i++) {\n          console.log('... file[' + i + '].name = ' + e.dataTransfer.files[i].name);\n          formData.append('image', e.dataTransfer.files[i]);\n        }\n      }\n      axios.post(`/api/workspaces/${workspace}/channels/${channel}/images`, formData).then(() => {\n        setDragOver(false);\n      });\n    },\n    [workspace, channel],\n  );\n\n  const onDragOver = useCallback((event) => {\n    event.preventDefault();\n    console.log(event);\n    setDragOver(true);\n  }, []);\n\n  if (!myData) {\n    return null;\n  }\n\n  const chatSections = makeSection(chatData ? chatData.flat().reverse() : []);\n\n  return (\n    <Container onDrop={onDrop} onDragOver={onDragOver}>\n      <Header>\n        <span>#{channel}</span>\n        <div className=\"header-right\">\n          <span>{channelMembersData?.length}</span>\n          <button\n            onClick={onClickInviteChannel}\n            className=\"c-button-unstyled p-ia__view_header__button\"\n            aria-label=\"Add people to #react-native\"\n            data-sk=\"tooltip_parent\"\n            type=\"button\"\n          >\n            <i className=\"c-icon p-ia__view_header__button_icon c-icon--add-user\" aria-hidden=\"true\" />\n          </button>\n        </div>\n      </Header>\n      <ChatList chatSections={chatSections} ref={scrollbarRef} setSize={setSize} isReachingEnd={isReachingEnd} />\n      <ChatBox chat={chat} onChangeChat={onChangeChat} onSubmitForm={onSubmitForm} />\n      <InviteChannelModal\n        show={showInviteChannelModal}\n        onCloseModal={onCloseModal}\n        setShowInviteChannelModal={setShowInviteChannelModal}\n      />\n      {dragOver && <DragOver>업로드!</DragOver>}\n    </Container>\n  );\n};\n\nexport default Channel;\n","import styled from '@emotion/styled';\n\nexport const CreateMenu = styled.div`\n  position: fixed;\n  top: 0;\n  right: 0;\n  left: 0;\n  bottom: 0;\n  z-index: 1000;\n  & > div {\n    position: absolute;\n    display: inline-block;\n    --saf-0: rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);\n    box-shadow: 0 0 0 1px var(--saf-0), 0 4px 12px 0 rgba(0, 0, 0, 0.12);\n    background-color: rgba(var(--sk_foreground_min_solid, 248, 248, 248), 1);\n    border-radius: 6px;\n    user-select: none;\n    min-width: 360px;\n    z-index: 512;\n    max-height: calc(100vh - 20px);\n    color: rgb(29, 28, 29);\n  }\n`;\n\nexport const CloseModalButton = styled.button`\n  position: absolute;\n  right: 10px;\n  top: 6px;\n  background: transparent;\n  border: none;\n  font-size: 30px;\n  cursor: pointer;\n`;\n","import React, { CSSProperties, FC, useCallback } from 'react';\nimport { CloseModalButton, CreateMenu } from './styles';\n\ninterface Props {\n  show: boolean;\n  onCloseModal: (e: any) => void;\n  style: CSSProperties;\n  closeButton?: boolean;\n}\nconst Menu: FC<Props> = ({ children, style, show, onCloseModal, closeButton }) => {\n  const stopPropagation = useCallback((e) => {\n    e.stopPropagation();\n  }, []);\n\n  if (!show) return null;\n\n  return (\n    <CreateMenu onClick={onCloseModal}>\n      <div style={style} onClick={stopPropagation}>\n        {closeButton && <CloseModalButton onClick={onCloseModal}>&times;</CloseModalButton>}\n        {children}\n      </div>\n    </CreateMenu>\n  );\n};\nMenu.defaultProps = {\n  closeButton: true,\n};\n\nexport default Menu;\n","import styled from '@emotion/styled';\n\nexport const Header = styled.header`\n  height: 38px;\n  background: #350d36;\n  color: #ffffff;\n  box-shadow: 0 1px 0 0 rgba(255, 255, 255, 0.1);\n  padding: 5px;\n  text-align: center;\n`;\n\nexport const RightMenu = styled.div`\n  float: right;\n`;\n\nexport const ProfileImg = styled.img`\n  width: 28px;\n  height: 28px;\n  position: absolute;\n  top: 5px;\n  right: 16px;\n`;\n\nexport const ProfileModal = styled.div`\n  display: flex;\n  padding: 20px;\n  & img {\n    display: flex;\n  }\n  & > div {\n    display: flex;\n    flex-direction: column;\n    margin-left: 10px;\n  }\n  & #profile-name {\n    font-weight: bold;\n    display: inline-flex;\n  }\n  & #profile-active {\n    font-size: 13px;\n    display: inline-flex;\n  }\n`;\n\nexport const LogOutButton = styled.button`\n  border: none;\n  width: 100%;\n  border-top: 1px solid rgb(29, 28, 29);\n  background: transparent;\n  display: block;\n  height: 33px;\n  padding: 5px 20px 5px;\n  outline: none;\n  cursor: pointer;\n`;\n","import Menu from '@components/Menu';\nimport React, { useCallback, useState, VFC } from 'react';\nimport useSWR from 'swr';\nimport gravatar from 'gravatar';\n\nimport { Header as HeaderStyle, LogOutButton, ProfileImg, ProfileModal, RightMenu } from './styles';\nimport { IUser } from '@typings/api';\nimport fetcher from '@utils/fetcher';\ninterface Props {\n  onLogout: () => Promise<void>;\n}\n\nconst Header: VFC<Props> = ({ onLogout }) => {\n  const { data: userData } = useSWR<IUser | false>('/api/users', fetcher, {\n    dedupingInterval: 2000,\n  });\n\n  const [showUserMenu, setShowUserMenu] = useState(false);\n\n  const onCloseUserProfile = useCallback((e) => {\n    e.stopPropagation();\n    setShowUserMenu(false);\n  }, []);\n\n  const onClickUserProfile = useCallback(() => {\n    setShowUserMenu((prev) => !prev);\n  }, []);\n\n  if (!userData) {\n    return null;\n  }\n\n  return (\n    <HeaderStyle>\n      <RightMenu>\n        <span onClick={onClickUserProfile}>\n          <ProfileImg src={gravatar.url(userData.email, { s: '28px', d: 'retro' })} alt={userData.nickname} />\n          {showUserMenu && (\n            <Menu style={{ right: 0, top: 38 }} show={showUserMenu} onCloseModal={onCloseUserProfile}>\n              <ProfileModal>\n                <img src={gravatar.url(userData.nickname, { s: '36px', d: 'retro' })} alt={userData.nickname} />\n                <div>\n                  <span id=\"profile-name\">{userData.nickname}</span>\n                  <span id=\"profile-active\">Active</span>\n                </div>\n              </ProfileModal>\n              <LogOutButton onClick={onLogout}>로그아웃</LogOutButton>\n            </Menu>\n          )}\n        </span>\n      </RightMenu>\n    </HeaderStyle>\n  );\n};\n\nexport default Header;\n","import styled from '@emotion/styled';\n\nexport const CollapseButton = styled.button<{ collapse: boolean }>`\n  background: transparent;\n  border: none;\n  width: 26px;\n  height: 26px;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  margin-left: 10px;\n  cursor: pointer;\n  ${({ collapse }) =>\n    collapse &&\n    `\n    & i {\n      transform: none;\n    }\n  `};\n`;\n","import React, { FC, useCallback, useEffect, useState } from 'react';\nimport { CollapseButton } from '@components/DMList/styles';\nimport { IChannel, IUser } from '@typings/api.d';\nimport fetcher from '@utils/fetcher';\nimport useSocket from '@hooks/useSocket';\nimport { useParams } from 'react-router';\nimport { NavLink } from 'react-router-dom';\nimport useSWR from 'swr';\n\nconst ChannelList: FC = () => {\n  const { workspace } = useParams<{ workspace?: string }>();\n  const [socket] = useSocket(workspace);\n  const { data: userData } = useSWR<IUser>('/api/users', fetcher, {\n    dedupingInterval: 2000,\n  });\n  const { data: channelData } = useSWR<IChannel[]>(\n    () => (userData && workspace !== 'slack' ? `/api/workspaces/${workspace}/channels` : null),\n    fetcher,\n  );\n  const [channelCollapse, setChannelCollapse] = useState(false);\n\n  const toggleChannelCollapse = useCallback(() => {\n    setChannelCollapse((prev) => !prev);\n  }, []);\n\n  useEffect(() => {\n    if (channelData && userData && socket) {\n      socket.emit('login', { id: userData.id, channels: channelData.map((v) => v.id) });\n    }\n  }, [socket, channelData, userData]);\n\n  return (\n    <>\n      <h2>\n        <CollapseButton collapse={channelCollapse} onClick={toggleChannelCollapse}>\n          <i\n            className=\"c-icon p-channel_sidebar__section_heading_expand p-channel_sidebar__section_heading_expand--show_more_feature c-icon--caret-right c-icon--inherit c-icon--inline\"\n            data-qa=\"channel-section-collapse\"\n            aria-hidden=\"true\"\n          />\n        </CollapseButton>\n        <span>Channels</span>\n      </h2>\n      <div>\n        {!channelCollapse &&\n          channelData?.map((channel) => {\n            return (\n              <NavLink\n                key={channel.name}\n                activeClassName=\"selected\"\n                to={`/workspace/${workspace}/channel/${channel.name}`}\n              >\n                <span># {channel.name}</span>\n              </NavLink>\n            );\n          })}\n      </div>\n    </>\n  );\n};\n\nexport default ChannelList;\n","import Modal from '@components/Modal';\nimport useInput from '@hooks/useInput';\nimport { Button, Input, Label } from '@pages/SignUp/styles';\nimport { IChannel, IUser } from '@typings/api.d';\nimport fetcher from '@utils/fetcher';\nimport axios from 'axios';\nimport React, { useCallback, VFC } from 'react';\nimport { useParams } from 'react-router';\nimport { toast } from 'react-toastify';\nimport useSWR from 'swr';\n\ninterface Props {\n  show: boolean;\n  onCloseModal: () => void;\n  setShowCreateChannelModal: (flag: boolean) => void;\n}\nconst CreateChannelModal: VFC<Props> = ({ show, onCloseModal, setShowCreateChannelModal }) => {\n  const [newChannel, onChangeNewChannel, setNewChannel] = useInput('');\n  const { workspace, channel } = useParams<{ workspace: string; channel: string }>();\n  const { data: userData, error, revalidate } = useSWR<IUser | false>('/api/users', fetcher, {\n    dedupingInterval: 2000, // 2초\n  });\n  const { revalidate: revalidateChannel } = useSWR<IChannel[]>(\n    userData && workspace !== 'slack' ? `/api/workspaces/${workspace}/channels` : null,\n    fetcher,\n  );\n\n  const onCreateChannel = useCallback(\n    async (event) => {\n      event.preventDefault();\n      try {\n        await axios.post(\n          `/api/workspaces/${workspace}/channels`,\n          {\n            name: newChannel,\n          },\n          {\n            withCredentials: true,\n          },\n        );\n        setShowCreateChannelModal(false);\n        revalidateChannel();\n        setNewChannel('');\n      } catch (error) {\n        console.dir(error);\n        toast.error(error.response?.data, { position: 'bottom-center' });\n      }\n    },\n    [newChannel],\n  );\n\n  return (\n    <Modal show={show} onCloseModal={onCloseModal}>\n      <form onSubmit={onCreateChannel}>\n        <Label id=\"channel-label\">\n          <span>채널</span>\n          <Input id=\"channel\" value={newChannel} onChange={onChangeNewChannel} />\n        </Label>\n        <Button type=\"submit\">생성하기</Button>\n      </form>\n    </Modal>\n  );\n};\n\nexport default CreateChannelModal;\n","import React, { FC, useCallback, useEffect, useState } from 'react';\nimport { CollapseButton } from '@components/DMList/styles';\nimport { IUser, IUserWithOnline } from '@typings/api.d';\nimport useSocket from '@hooks/useSocket';\nimport fetcher from '@utils/fetcher';\nimport { useParams } from 'react-router';\nimport { NavLink } from 'react-router-dom';\nimport useSWR from 'swr';\n\nconst DMList: FC = () => {\n  const { workspace } = useParams<{ workspace?: string }>();\n  const { data: userData } = useSWR<IUser>('/api/users', fetcher, {\n    dedupingInterval: 2000, // 2초\n  });\n  const { data: memberData } = useSWR<IUserWithOnline[]>(\n    userData && workspace !== 'slack' ? `/api/workspaces/${workspace}/members` : null,\n    fetcher,\n  );\n  const [socket] = useSocket(workspace);\n  const [channelCollapse, setChannelCollapse] = useState(false);\n  const [onlineList, setOnlineList] = useState<number[]>([]);\n\n  const toggleChannelCollapse = useCallback(() => {\n    setChannelCollapse((prev) => !prev);\n  }, []);\n\n  useEffect(() => {\n    setOnlineList([]);\n  }, [workspace]);\n\n  useEffect(() => {\n    socket?.on('onlineList', (data: number[]) => {\n      console.log(data);\n      setOnlineList(data);\n    });\n    // socket?.on('dm', onMessage);\n    // console.log('socket on dm', socket?.hasListeners('dm'), socket);\n    return () => {\n      // socket?.off('dm', onMessage);\n      // console.log('socket off dm', socket?.hasListeners('dm'));\n      socket?.off('onlineList');\n    };\n  }, [socket]);\n\n  return (\n    <>\n      <h2>\n        <CollapseButton collapse={channelCollapse} onClick={toggleChannelCollapse}>\n          <i\n            className=\"c-icon p-channel_sidebar__section_heading_expand p-channel_sidebar__section_heading_expand--show_more_feature c-icon--caret-right c-icon--inherit c-icon--inline\"\n            data-qa=\"channel-section-collapse\"\n            aria-hidden=\"true\"\n          />\n        </CollapseButton>\n        <span>Direct Messages</span>\n      </h2>\n      <div>\n        {!channelCollapse &&\n          memberData &&\n          memberData.length > 0 &&\n          memberData.map((member) => {\n            const isOnline = onlineList.includes(member.id);\n            return (\n              <NavLink key={member.id} activeClassName=\"selected\" to={`/workspace/${workspace}/dm/${member.id}`}>\n                <i\n                  className={`c-icon p-channel_sidebar__presence_icon p-channel_sidebar__presence_icon--dim_enabled c-presence ${\n                    isOnline ? 'c-presence--active c-icon--presence-online' : 'c-icon--presence-offline'\n                  }`}\n                  aria-hidden=\"true\"\n                  data-qa=\"presence_indicator\"\n                  data-qa-presence-self=\"false\"\n                  data-qa-presence-active=\"false\"\n                  data-qa-presence-dnd=\"false\"\n                />\n                <span>{member.nickname}</span>\n                {member.id === userData?.id && <span> (나)</span>}\n              </NavLink>\n            );\n          })}\n      </div>\n    </>\n  );\n};\n\nexport default DMList;\n","import Modal from '@components/Modal';\nimport useInput from '@hooks/useInput';\nimport { Button, Input, Label } from '@pages/SignUp/styles';\nimport { IChannel, IUser } from '@typings/api.d';\nimport fetcher from '@utils/fetcher';\nimport axios from 'axios';\nimport React, { FC, useCallback } from 'react';\nimport { useParams } from 'react-router';\nimport { toast } from 'react-toastify';\nimport useSWR from 'swr';\n\ninterface Props {\n  show: boolean;\n  onCloseModal: () => void;\n  setShowInviteWorkspaceModal: (flag: boolean) => void;\n}\nconst InviteWorkspaceModal: FC<Props> = ({ show, onCloseModal, setShowInviteWorkspaceModal }) => {\n  const { workspace } = useParams<{ workspace: string; channel: string }>();\n  const [newMember, onChangeNewMember, setNewMember] = useInput('');\n  const { data: userData } = useSWR<IUser>('/api/users', fetcher);\n  const { revalidate: revalidateMember } = useSWR<IChannel[]>(\n    userData && workspace !== 'slack' ? `/api/workspaces/${workspace}/members` : null,\n    fetcher,\n  );\n\n  const onInviteMember = useCallback(\n    async (event) => {\n      event.preventDefault();\n      if (!newMember || !newMember.trim()) {\n        return;\n      }\n      try {\n        await axios.post(`/api/workspaces/${workspace}/members`, {\n          email: newMember,\n        });\n        revalidateMember();\n        setShowInviteWorkspaceModal(false);\n        setNewMember('');\n      } catch (error) {\n        console.dir(error);\n        toast.error(error.response?.data, { position: 'bottom-center' });\n      }\n    },\n    [workspace, newMember],\n  );\n\n  return (\n    <Modal show={show} onCloseModal={onCloseModal}>\n      <form onSubmit={onInviteMember}>\n        <Label id=\"member-label\">\n          <span>이메일</span>\n          <Input id=\"member\" type=\"email\" value={newMember} onChange={onChangeNewMember} />\n        </Label>\n        <Button type=\"submit\">초대하기</Button>\n      </form>\n    </Modal>\n  );\n};\n\nexport default InviteWorkspaceModal;\n","import ChannelList from '@components/ChannelList';\nimport CreateChannelModal from '@components/CreateChannelModal';\nimport DMList from '@components/DMList';\nimport InviteWorkspaceModal from '@components/InviteWorkspaceModal';\nimport Menu from '@components/Menu';\nimport { useWorkspace } from '@contexts/WorkspaceContext';\nimport { Channels, MenuScroll, WorkspaceModal, WorkspaceName } from '@layouts/Workspace/styles';\nimport React, { useCallback, useState, VFC } from 'react';\n\ninterface Props {\n  onLogout: () => Promise<void>;\n}\n\nconst WorkspaceChannels: VFC<Props> = ({ onLogout }) => {\n  const { workspace } = useWorkspace();\n\n  const [showWorkspaceModal, setShowWorkspaceModal] = useState(false);\n  const [showCreateChannelModal, setShowCreateChannelModal] = useState(false);\n  const [showInviteWorkspaceModal, setShowInviteWorkspaceModal] = useState(false);\n\n  const toggleWorkspaceModal = useCallback(() => {\n    setShowWorkspaceModal((prev) => !prev);\n  }, []);\n\n  const onClickInviteWorkspace = useCallback(() => {\n    setShowInviteWorkspaceModal(true);\n  }, []);\n  const onClickAddChannel = useCallback(() => {\n    setShowCreateChannelModal((prev) => !prev);\n  }, []);\n\n  const onCloseModal = useCallback(() => {\n    setShowCreateChannelModal(false);\n    setShowInviteWorkspaceModal(false);\n  }, []);\n\n  return (\n    <>\n      <Channels>\n        <WorkspaceName onClick={toggleWorkspaceModal}>{workspace?.name || ''}</WorkspaceName>\n        <i />\n        <MenuScroll>\n          {workspace && (\n            <>\n              <Menu show={showWorkspaceModal} onCloseModal={toggleWorkspaceModal} style={{ top: 95, left: 80 }}>\n                <WorkspaceModal>\n                  <h2>{workspace?.name}</h2>\n                  <button onClick={onClickInviteWorkspace}>워크스페이스에 사용자 초대</button>\n                  <button onClick={onClickAddChannel}>채널 만들기</button>\n                  <button onClick={onLogout}>로그아웃</button>\n                </WorkspaceModal>\n              </Menu>\n              <ChannelList />\n              <DMList />\n            </>\n          )}\n        </MenuScroll>\n      </Channels>\n      <CreateChannelModal\n        show={showCreateChannelModal}\n        onCloseModal={onCloseModal}\n        setShowCreateChannelModal={setShowCreateChannelModal}\n      />\n      <InviteWorkspaceModal\n        show={showInviteWorkspaceModal}\n        onCloseModal={onCloseModal}\n        setShowInviteWorkspaceModal={setShowInviteWorkspaceModal}\n      />\n    </>\n  );\n};\n\nexport default WorkspaceChannels;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  height: calc(100vh - 38px);\n  flex-flow: column;\n  position: relative;\n`;\n\nexport const Header = styled.header`\n  height: 64px;\n  display: flex;\n  width: 100%;\n  --saf-0: rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);\n  box-shadow: 0 1px 0 var(--saf-0);\n  padding: 20px 16px 20px 20px;\n  font-weight: bold;\n  align-items: center;\n  & img {\n    margin-right: 5px;\n  }\n`;\n\nexport const DragOver = styled.div`\n  position: absolute;\n  top: 64px;\n  left: 0;\n  width: 100%;\n  height: calc(100% - 64px);\n  background: white;\n  opacity: 0.7;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 40px;\n`;\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport ChatBox from '@components/ChatBox';\nimport ChatList from '@components/ChatList';\nimport useInput from '@hooks/useInput';\nimport useSocket from '@hooks/useSocket';\nimport { Container, Header, DragOver } from '@pages/DirectMessage/styles';\nimport { IDM } from '@typings/api.d';\nimport fetcher from '@utils/fetcher';\nimport makeSection from '@utils/makeSection';\nimport axios from 'axios';\nimport gravatar from 'gravatar';\nimport Scrollbars from 'react-custom-scrollbars';\nimport { useParams } from 'react-router';\nimport useSWR, { useSWRInfinite } from 'swr';\n\nconst DirectMessage = () => {\n  const { workspace, id } = useParams<{ workspace: string; id: string }>();\n  const { data: userData } = useSWR(`/api/workspaces/${workspace}/users/${id}`, fetcher);\n  const { data: myData } = useSWR('/api/users', fetcher);\n  const [chat, onChangeChat, setChat] = useInput('');\n  const { data: chatData, mutate: mutateChat, revalidate, setSize } = useSWRInfinite<IDM[]>(\n    (index) =>\n      workspace !== 'slack' ? `/api/workspaces/${workspace}/dms/${id}/chats?perPage=20&page=${index + 1}` : null,\n    fetcher,\n  );\n  const [socket] = useSocket(workspace);\n  const isEmpty = chatData?.[0]?.length === 0;\n  const isReachingEnd = isEmpty || (chatData && chatData[chatData.length - 1]?.length < 20) || false;\n  const scrollbarRef = useRef<Scrollbars>(null);\n  const [dragOver, setDragOver] = useState(false);\n\n  const onSubmitForm = useCallback(\n    async (event) => {\n      event.preventDefault();\n\n      if (!(chat?.trim() && chatData)) {\n        return;\n      }\n      try {\n        await mutateChat((prevChatData) => {\n          prevChatData?.[0].unshift({\n            id: (chatData[0][0]?.id || 0) + 1,\n            content: chat,\n            SenderId: myData.id,\n            Sender: myData,\n            ReceiverId: userData.id,\n            Receiver: userData,\n            createdAt: new Date(),\n          });\n          return prevChatData;\n        }, false);\n        setChat('');\n        scrollbarRef.current?.scrollToBottom();\n        await axios.post(`/api/workspaces/${workspace}/dms/${id}/chats`, {\n          content: chat,\n        });\n        revalidate();\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    [chat, chatData, myData, userData, workspace, id],\n  );\n\n  const onMessage = useCallback(async (data: IDM) => {\n    if (data.SenderId === Number(id) && myData.id !== Number(id)) {\n      await mutateChat((chatData) => {\n        chatData?.[0].unshift(data);\n        return chatData;\n      }, false);\n\n      if (scrollbarRef.current) {\n        if (\n          scrollbarRef.current.getScrollHeight() <\n          scrollbarRef.current.getClientHeight() + scrollbarRef.current.getScrollTop() + 150\n        ) {\n          console.log('scrollToBottom!', scrollbarRef.current?.getValues());\n          setTimeout(() => {\n            scrollbarRef.current?.scrollToBottom();\n          }, 50);\n        }\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    socket?.on('dm', onMessage);\n    return () => {\n      socket?.off('dm', onMessage);\n    };\n  }, [socket, onMessage]);\n\n  useEffect(() => {\n    if (chatData?.length === 1) {\n      setTimeout(() => {\n        scrollbarRef.current?.scrollToBottom();\n      }, 100);\n    }\n  }, [chatData]);\n\n  const onDrop = useCallback(\n    async (event) => {\n      event.preventDefault();\n      console.log(event);\n      const formData = new FormData();\n      if (event.dataTransfer.items) {\n        // Use DataTransferItemList interface to access the file(s)\n        for (let i = 0; i < event.dataTransfer.items.length; i++) {\n          // If dropped items aren't files, reject them\n          if (event.dataTransfer.items[i].kind === 'file') {\n            const file = event.dataTransfer.items[i].getAsFile();\n            console.log('... file[' + i + '].name = ' + file.name);\n            formData.append('image', file);\n          }\n        }\n      } else {\n        // Use DataTransfer interface to access the file(s)\n        for (let i = 0; i < event.dataTransfer.files.length; i++) {\n          console.log('... file[' + i + '].name = ' + event.dataTransfer.files[i].name);\n          formData.append('image', event.dataTransfer.files[i]);\n        }\n      }\n      try {\n        await axios.post(`/api/workspaces/${workspace}/dms/${id}/images`, formData);\n        setDragOver(false);\n        revalidate();\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    [revalidate, workspace, id],\n  );\n\n  const onDragOver = useCallback((event) => {\n    event.preventDefault();\n    console.log('onDragOver');\n    setDragOver(true);\n  }, []);\n\n  const onDragLeave = useCallback((event) => {\n    event.preventDefault();\n    console.log('onDragLeave');\n    setDragOver(false);\n  }, []);\n\n  if (!userData || !myData) {\n    return null;\n  }\n\n  const chatSections = makeSection(chatData ? chatData.flat().reverse() : []);\n\n  return (\n    <Container onDrop={onDrop} onDragOver={onDragOver} onDragLeave={onDragLeave}>\n      <Header>\n        <img src={gravatar.url(userData.email, { s: '24px', d: 'retro' })} alt={userData.nickname} />\n        <span>{userData.nickname}</span>\n      </Header>\n      <ChatList chatSections={chatSections} ref={scrollbarRef} setSize={setSize} isReachingEnd={isReachingEnd} />\n      <ChatBox chat={chat} onChangeChat={onChangeChat} onSubmitForm={onSubmitForm} />\n      {dragOver && <DragOver>업로드</DragOver>}\n    </Container>\n  );\n};\n\nexport default DirectMessage;\n","import { Chats, WorkspaceWrapper } from '@layouts/Workspace/styles';\nimport { IUser, IWorkspace } from '@typings/api';\nimport fetcher from '@utils/fetcher';\nimport axios from 'axios';\nimport React, { VFC, useCallback } from 'react';\nimport { Redirect, Route, Switch, useParams } from 'react-router';\nimport useSWR from 'swr';\nimport WorkspaceList from '@components/WorkspaceList';\nimport Channel from '@pages/Channel';\nimport Header from '@components/Header';\nimport { toast } from 'react-toastify';\nimport WorkspaceChannels from '@components/WorkspaceChannels';\nimport DirectMessage from '@pages/DirectMessage';\n\nconst Workspace: VFC = () => {\n  const { workspace } = useParams<{ workspace?: string }>();\n\n  const { data: userData, mutate } = useSWR<IUser | false>('/api/users', fetcher, {\n    dedupingInterval: 2000,\n  });\n  const { data: workspacesData, revalidate: workspaceRevalidate } = useSWR<IWorkspace[] | false>(\n    '/api/workspaces',\n    fetcher,\n    {\n      dedupingInterval: 2000,\n    },\n  );\n\n  const onLogout = useCallback(async () => {\n    try {\n      await axios.post('/api/users/logout', null, {\n        withCredentials: true,\n      });\n      mutate(false, false);\n    } catch (error) {\n      console.dir(error);\n      toast.error(error.response?.data, { position: 'bottom-center' });\n    }\n  }, []);\n\n  if (!userData) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  return (\n    <div>\n      <Header onLogout={onLogout} />\n      <WorkspaceWrapper>\n        <WorkspaceList list={workspacesData || []} revalidate={workspaceRevalidate} />\n        <WorkspaceChannels onLogout={onLogout} />\n        {workspace && workspace !== 'slack' && (\n          <Chats>\n            <Switch>\n              <Route path=\"/workspace/:workspace/channel/:channel\" component={Channel} />\n              <Route path=\"/workspace/:workspace/dm/:id\" component={DirectMessage} />\n            </Switch>\n          </Chats>\n        )}\n      </WorkspaceWrapper>\n    </div>\n  );\n};\n\nexport default Workspace;\n","import styled from '@emotion/styled';\n\nexport const Header = styled.header`\n  text-align: center;\n  font-family: Slack-Larsseit, Helvetica Neue, Helvetica, Segoe UI, Tahoma, Arial, sans-serif;\n  font-weight: 700;\n  font-size: 48px;\n  line-height: 46px;\n  letter-spacing: -0.75px;\n  margin-top: 50px;\n  margin-bottom: 50px;\n`;\n\nexport const Form = styled.form`\n  margin: 0 auto;\n  width: 400px;\n  max-width: 400px;\n`;\n\nexport const Label = styled.label`\n  margin-bottom: 16px;\n  & > span {\n    display: block;\n    text-align: left;\n    padding-bottom: 8px;\n    font-size: 15px;\n    cursor: pointer;\n    line-height: 1.46666667;\n    font-weight: 700;\n  }\n`;\n\nexport const Input = styled.input`\n  border-radius: 4px;\n  --saf-0: rgba(var(--sk_foreground_high_solid, 134, 134, 134), 1);\n  border: 1px solid var(--saf-0);\n  transition: border 80ms ease-out, box-shadow 80ms ease-out;\n  box-sizing: border-box;\n  margin: 0 0 20px;\n  width: 100%;\n  color: rgba(var(--sk_primary_foreground, 29, 28, 29), 1);\n  background-color: rgba(var(--sk_primary_background, 255, 255, 255), 1);\n  padding: 12px;\n  height: 44px;\n  padding-top: 11px;\n  padding-bottom: 13px;\n  font-size: 18px;\n  line-height: 1.33333333;\n  &:focus {\n    --saf-0: rgba(var(--sk_highlight, 18, 100, 163), 1);\n    box-shadow: 0 0 0 1px var(--saf-0), 0 0 0 5px rgba(29, 155, 209, 0.3);\n  }\n`;\n\nexport const Button = styled.button`\n  margin-bottom: 12px;\n  width: 100%;\n  max-width: 100%;\n  color: #fff;\n  background-color: #4a154b;\n  border: none;\n  font-size: 18px;\n  font-weight: 900;\n  height: 44px;\n  min-width: 96px;\n  padding: 0 16px 3px;\n  transition: all 80ms linear;\n  user-select: none;\n  outline: none;\n  cursor: pointer;\n  border-radius: 4px;\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.3);\n  &:hover {\n    background-color: rgba(74, 21, 75, 0.9);\n    border: none;\n  }\n  &:focus {\n    --saf-0: rgba(var(--sk_highlight, 18, 100, 163), 1);\n    box-shadow: 0 0 0 1px var(--saf-0), 0 0 0 5px rgba(29, 155, 209, 0.3);\n  }\n`;\n\nexport const Error = styled.div`\n  color: #e01e5a;\n  margin: 8px 0 16px;\n  font-weight: bold;\n`;\n\nexport const Success = styled.div`\n  color: #2eb67d;\n  font-weight: bold;\n`;\n\nexport const LinkContainer = styled.p`\n  font-size: 13px;\n  color: #616061;\n  margin: 0 auto 8px;\n  width: 400px;\n  max-width: 400px;\n  & a {\n    color: #1264a3;\n    text-decoration: none;\n    font-weight: 700;\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`;\n","import axios from 'axios';\n\nconst fetcher = async (url: string) => {\n  const { data } = await axios.get(url, {\n    withCredentials: true,\n  });\n  return data;\n};\n\nexport default fetcher;\n"],"sourceRoot":""}